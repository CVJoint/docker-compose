
### Before starting the containers, create external network to assign IP addresses which will all be 172.20.200.x
  # docker network create --gateway 172.20.200.1 --subnet 172.20.200.0/24 pi_net

## Pihole - Ad-blocker

  ## The resolv.conf file was giving me trouble in the pihole container, so here is the workaround:
    # mkdir -p ${USERDIR}/docker/pihole/resolv.conf
    # nano ${USERDIR}/docker/pihole/resolv.conf/resolv.conf
    ## Enter both lines below and save:
    # nameserver 127.0.0.1
    # nameserver 172.20.200.102

  ## To store logs run:
    # touch ${USERDIR}/docker/pihole/pihole.log

  ## I've added the following blocklist in addition to the standard ones under Settings>Blocklists (copy the link, paste and update)
    # https://dbl.oisd.nl/
    ## More info here: https://www.reddit.com/r/pihole/comments/bppug1/introducing_the/

  ## I've added the following whitelist entries (copy domains and paste all at once)
    # https://github.com/anudeepND/whitelist/blob/master/domains/whitelist.txt
    # https://github.com/anudeepND/whitelist/blob/master/domains/referral-sites.txt

  ## I also use the regex list and scripts from https://github.com/mmotti

version: "3.7"
services:

## Pihole - Ad-blocker
  pihole:
    container_name: pihole
    image: pihole/pihole
    restart: unless-stopped
    depends_on:
      - unbound
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - NET_BIND_SERVICE
    networks:
      pi_net:
        ipv4_address: 172.20.200.101
    ports:
      - '53:53/tcp'
      - '53:53/udp'
      - '67:67/udp'
      - '80:80/tcp'
      - '443:443/tcp'
    volumes:
      - ~/docker/pihole/pihole:/etc/pihole
#      ## Add dark skin to pihole: https://github.com/thomasbnt/Night_PiHole
#      - ~/docker/pihole/theme/skin-blue.min.css:/var/www/html/admin/style/vendor/skin-blue.min.css
#      - ~/docker/pihole/theme/AdminLTE.min.css:/var/www/html/admin/style/vendor/AdminLTE.min.css
      - ~/docker/pihole/resolv.conf/resolv.conf:/etc/resolv.conf:ro
      - ~/docker/pihole/dnsmasq.d:/etc/dnsmasq.d
      ## Run `touch ~/docker/pihole/pihole.log` before starting pihole
      - ~/docker/pihole/pihole.log:/var/log/pihole.log
      ## More info on these scripts here: https://github.com/mmotti
      - ~/docker/pihole/scripts/fetchFilterLists.sh:/usr/local/bin/fetchFilterLists.sh
      - ~/docker/pihole/scripts/gravityOptimise.sh:/usr/local/bin/gravityOptimise.sh
      - ~/docker/pihole/scripts/generateGravityWildcards.sh:/usr/local/bin/generateGravityWildcards.sh
      - ~/docker/pihole/scripts/cron.d/fetchFilterLists:/etc/cron.d/fetchFilterLists
      - ~/docker/pihole/scripts/cron.d/gravityOptimise:/etc/cron.d/gravityOptimise
      - ~/docker/pihole/scripts/cron.d/generateGravityWildcards:/etc/cron.d/generateGravityWildcards
    environment:
      - TZ=America/Detroit
      - ServerIP=192.168.1.3 # (My Host IP)
      - IPv6=False
      - WEBPASSWORD=${PIHOLE_PASSWORD}
      - DNS1=127.0.0.1
      - DNS2=172.20.200.102 # Unbound IP

## Unbound - DNS Server

  ## Setup folders and files
    # mkdir ${USERDIR}/docker/pihole/unbound
    # sudo chown -R ${USER}:${USER} ${USERDIR}/docker/pihole/unbound
    # docker run --rm --entrypoint cat mvance/unbound /opt/unbound/etc/unbound/a-records.conf > ${USERDIR}/docker/pihole/unbound/a-records.conf
  ## Start container
    # docker exec -it unbound unbound-anchor
  ## Stop container
    # sudo chown -R ${USER}:${USER} ${USERDIR}/docker/pihole/unbound
    # rm ${USERDIR}/docker/pihole/unbound/var/root.key
    # mv ${USERDIR}/docker/pihole/unbound/root.key ${USERDIR}/docker/pihole/unbound/var
    # wget https://www.internic.net/domain/named.root -O ${USERDIR}/docker/pihole/unbound/var/root.hints

  ## Edit the unbound.conf file:
  ## Change:
    # cache-min-ttl: 60
    # msg-cache-size: 1039635797
    # rrset-cache-size: 1039635797
    # In the FORWARD ZONE section, comment out the "forward-addr" lines for Cloudflare and CleanBrowsing, and add:
    # forward-addr: 172.20.200.103@8053
  ## Add to the bottom of BASIC SETTINGS:
    # root-hints: "/opt/unbound/etc/unbound/var/root.hints"
    # do-ip6: no  ## If you don't want to use IPv6
    # deny-any:yes

  ## Test that it's working (pihole must be running)
    # docker exec -it pihole dig pi-hole.net @127.0.0.1 -p 53

  ## Test DNSSEC
  ## This command should result in: "status: SERVFAIL"
    # docker exec -it pihole dig sigfail.verteiltesysteme.net @127.0.0.1 -p 53
  ## This command should result in: "status: NOERROR"
    # docker exec -it pihole dig sigok.verteiltesysteme.net @127.0.0.1 -p 53

  unbound:
    container_name: unbound
    image: mvance/unbound-rpi
    image: pihole_unbound
    restart: always
#    depends_on:
#      - stubby
    networks:
      pi_net:
        ipv4_address: 172.20.200.102
#    ports:
#      - '5353:5353'
    volumes:
      - ~/docker/pihole/unbound:/opt/unbound/etc/unbound
      - ~/docker/shared:/shared

## Stubby - Stub Resolver - DNS over TLS

  ## If stubby folder doesn't exist, create it with:
    # mkdir ${USERDIR}/docker/pihole/stubby
  # docker run --rm --entrypoint cat mvance/stubby /opt/stubby/etc/stubby/stubby.yml > ${USERDIR}/docker/pihole/stubby/stubby.yml

#  stubby:
#   container_name: stubby
#   build: ./buildfiles/stubby
#   image: pihole_stubby
#   restart: always
#   networks:
#     pi_net:
#       ipv4_address: 172.20.200.103
##   ports:
##     - '8053:8053'
#   volumes:
#     - ~/docker/pihole/stubby:/opt/stubby/etc/stubby
#     - ~/docker/shared:/shared

networks:
  pi_net:
    external:
      name: pi_net
